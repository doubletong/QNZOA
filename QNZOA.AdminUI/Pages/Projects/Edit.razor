@page "/projects/edit"
@page "/projects/edit/{Id:int}"
@attribute [Authorize]



@using QNZOA.AdminUI.Components
@inject ICustomerService customerService
@inject IProjectService projectService
@inject IAccountService accountService
@inject IToastService toastService
@inject AutoMapper.IMapper _mapper
@inject NavigationManager navigationManager


@inject IJSRuntime JSRuntime;

<div class="breadcrumb-container">
    <div class="row">
        <div class="col-md">
            <nav aria-label="breadcrumb">
                <ol class="breadcrumb">
                    <li class="breadcrumb-item"><a href="/">控制面板</a></li>
                    <li class="breadcrumb-item"><a href="/projects/index">项目</a></li>
                    <li class="breadcrumb-item active" aria-current="page">编辑</li>
                </ol>
            </nav>
        </div>
        <div class="col-md-auto">
            <time id="sitetime">@DateTime.Now.ToLongDateString()</time>
        </div>
    </div>
</div>
<EditForm Model="@ProjectIM" OnValidSubmit="@HandleValidSubmit">
    <div class="card">
        <header class="card-header">
            <div class="row">
                <div class="col">
                    <div class="card-title-v1"><i class="iconfont icon-customer"></i>@(Id > 0 ? "编辑项目" : "创建项目")</div>
                </div>
                <div class="col-auto">
                    <div class="control"><a class="expand" href="#"><i class="iconfont icon-fullscreen"></i></a><a class="compress" href="#" style="display: none;"><i class="iconfont icon-shrink"></i></a></div>
                </div>
            </div>
        </header>
        <div class="card-body">

            <DataAnnotationsValidator />
            <ValidationSummary />

            <div class="form-group">
                <label for="Username">名称</label>
                <InputText id="Username" @bind-Value="ProjectIM.Name" class="form-control" />

            </div>
            <div class="form-group">
                <label for="customerId">客户</label>
                <InputSelectNumber id="customerId" @bind-Value="ProjectIM.CustomerId" class="form-control">
                    <option value="">请选择 ...</option>
                    @if (Customers != null)
                    {
                        foreach (var item in Customers)
                        {
                            <option value="@item.Id">@item.DisplayName</option>
                        }
                    }
                </InputSelectNumber>
            </div>

            <div class="form-group">
                <label for="manager">主管人</label>
                <InputSelectGuid id="manager" @bind-Value="ProjectIM.Manager" class="form-control">
                    <option value="">请选择 ...</option>
                    @if (Users != null)
                    {
                        foreach (var item in Users)
                        {
                            <option value="@item.Id">@item.DisplayName</option>
                        }
                    }
                </InputSelectGuid>
            </div>

            <div class="form-group">
                <label for="phone">起始日期</label>
                <InputDate id="phone" @bind-Value="ProjectIM.StartDate" class="form-control" />
            </div>
            <div class="form-group">
                <label for="address">结束日期</label>
                <InputDate id="address" @bind-Value="ProjectIM.EndDate" class="form-control" />
            </div>

            <div class="form-group">
                <label for="description">描述</label>
                <InputTextArea id="description" @bind-Value="ProjectIM.Description" class="form-control" />
            </div>

        </div>
        <div class="card-footer text-center">
            <button class="btn btn-primary" type="submit"><i class="iconfont icon-save"></i>提交</button>
            <a href="/projects/index" class="btn btn-secondary"><i class="iconfont icon-rollback"></i>返回</a>
        </div>
    </div>
</EditForm>
@code {
    [Parameter]
    public int? Id { get; set; }
    private ProjectIM ProjectIM = new ProjectIM();
    private IEnumerable<CustomerForSelectVM> Customers;
    private IEnumerable<UserForSelectVM> Users;


    protected override async System.Threading.Tasks.Task OnAfterRenderAsync(bool firstRender)
    {

        if (firstRender)
        {

            await JSRuntime.InvokeVoidAsync("RichTextEditor.removeTinymce");
            await JSRuntime.InvokeVoidAsync("RichTextEditor.loadFullTinymce", "description");


        }

        //base.OnAfterRender(firstRender);
    }

    protected override async System.Threading.Tasks.Task OnInitializedAsync()
    {
        Customers = await customerService.GetCustomersForSelectAsync();
        Users = await accountService.GetUsersForSelectAsync();
        if (Id != null)
        {
            var project = await projectService.Get(Id.Value);
            ProjectIM = _mapper.Map<ProjectIM>(project);
        }

    }

    private async System.Threading.Tasks.Task HandleOpenFinder()
    {
        await JSRuntime.InvokeVoidAsync("App.CallSingleFinder");
    }

    private async System.Threading.Tasks.Task HandleValidSubmit()
    {
        ProjectIM.Description = await JSRuntime.InvokeAsync<string>("RichTextEditor.getTinymceContent", "description");
        try
        {
            if (Id != null)
            {
                await projectService.UpdateAsync(Id.Value, ProjectIM);
                toastService.ShowSuccess("项目资料已更新");
            }
            else
            {
                await projectService.CreateAsync(ProjectIM);
                navigationManager.NavigateTo("/projects/index");
            }



        }
        catch (Exception ex)
        {
            toastService.ShowError(ex.Message);

        }
    }
}
