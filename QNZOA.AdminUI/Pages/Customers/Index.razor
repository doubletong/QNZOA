@page "/Customers"
@page "/Customers/Index"

@using QNZOA.AdminUI.Components
@inject ILocalStorageService localStorage
@inject IHttpClientFactory clientFactory
@inject ICustomerService customerService


<div class="breadcrumb-container">
    <div class="row">
        <div class="col-md">
            <nav aria-label="breadcrumb">
                <ol class="breadcrumb">
                    <li class="breadcrumb-item"><a href="/">控制面板</a></li>
                    <li class="breadcrumb-item active" aria-current="page">客户管理</li>
                </ol>
            </nav>
        </div>
        <div class="col-md-auto">
            <time id="sitetime">@DateTime.Now.ToLongDateString()</time>
        </div>
    </div>
</div>
<div class="page-customer">
    <QNZCardComponent Title="客户列表" FontIcon="icon-customer">
        <section class="card-body">
            <div class="card-toolbar mb-3">
                <div class="row">
                    <div class="col">
                        <div class="form-inline">
                            <input type="text" class="form-control mr-sm-2" @bind="vm.Keywords" placeholder="关键字" />
                            <button type="button" class="btn btn-info" @onclick="SearchCustomers"><span class="iconfont icon-search"></span> 搜索</button>
                        </div>
                    </div>
                    <div class="col-auto">
                        <a href="/customers/edit" class="btn btn-primary"><span class="iconfont icon-plus"></span> 添加</a>
                    </div>
                </div>
            </div>


            @if (vm.Customers == null)
            {
                <div class="d-flex align-items-center">
                    <strong>加载中...</strong>
                    <div class="spinner-border ml-auto" role="status" aria-hidden="true"></div>
                </div>
            }
            else
            {
                <div class="table-responsive">
                    <table class='table table-striped table-bordered'>
                        <thead>
                            <tr>
                                <th>Logo</th>
                                <th>名称</th>
                                <th>类型</th>
                                <th>联系电话/邮箱/主页</th>                                       
                                <th>项目数量</th>
                                <th>创建时间</th>

                                <th>操作</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in vm.Customers)
                            {
                                <tr>
                                    <td>
                                        @if (!string.IsNullOrEmpty(item.Logo))
                                        {
                                            <img src="@item.Logo" style="height:30px;" />
                                        }
                                        else
                                        {
                                            <img src="https://www.fillmurray.com/g/210/70" alt="">
                                        }

                                    </td>
                                    <td>@item.Name</td>
                                    <td>
                                        @{
                                            if (item.CustomerType == 1)
                                            {
                                                <span>个人</span>
                                            }
                                            else
                                            {
                                                <span>公司</span>
                                            }

                                        }
                                    </td>

                                    <td>
                                        <ul>
                                            @if (!string.IsNullOrEmpty(item.Phone))
                                            {
                                                <li><i class="iconfont icon-mobile"></i><a href="tel:@item.Phone">@item.Phone</a></li>
                                            }
                                            @if (!string.IsNullOrEmpty(item.Email))
                                            {
                                                <li><i class="iconfont icon-mail"></i><a href="mailto:@item.Email">@item.Email</a></li>
                                            }
                                            @if (!string.IsNullOrEmpty(item.Homepage))
                                            {
                                                <li><i class="iconfont icon-home"></i><a href="@item.Homepage" target="_blank">@item.Homepage</a></li>
                                            }                                        
                                        </ul>

                                        
                                    </td>
                                  
                                    <td>@item.ProjectCount</td>
                                    <td>@string.Format("{0:d}", item.CreatedDate)</td>
                                    <td>
                                        <a class="btn btn-info btn-sm" href="/Customers/@item.Id">
                                            <i class="iconfont icon-ellipsis"></i>
                                        </a>
                                        @*<a class="btn btn-info btn-sm" href="/Customer/Detail" title="查看明细"><i class="iconfont icon-ellipsis"></i></a>*@
                                        <a class="btn btn-info btn-sm" href="#" title="激活"><i class="iconfont icon-eye"></i></a>
                                        <a class="btn btn-primary btn-sm" href="CustomerEdit.html" title="编辑"><i class="iconfont icon-edit"></i></a>
                                        <a class="btn btn-info btn-sm" href="#" title="拷贝"><i class="iconfont icon-file-copy"></i></a>
                                        <a class="btn btn-danger btn-sm" href="#" title="删除"><i class="iconfont icon-delete"></i></a>
                                        @*<button type="button" data-toggle="modal" data-target="#exampleModal" title="编辑" onclick="@(async () => await EditItem(item.Id))" class='btn btn-primary btn-sm'>
            <span class="iconfont icon-edit"></span>
        </button>
        <button type="button" class='btn btn-danger btn-sm' @onclick="(async () => await DeleteItem(item.Id))" title="删除"><span class="iconfont icon-delete"></span></button>*@
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>

            }
        </section>
        <footer class="card-footer">
            <div class="row table-pager">
                <div class="col-md">
                    <Pagination PageSize="@vm.PageSize"
                                PageIndex="@vm.PageIndex"
                                LastPageIndex="@vm.LastPageIndex" ShowPageCount="6"
                                PageChanged="@(async (e) => await PagerPageChanged(e))" />
                </div>
                <div class="col-md-auto">
                    总记录数：@vm.RowCount 条，页：@(vm.PageIndex + 1) / @(vm.LastPageIndex + 1)
                </div>

            </div>
        </footer>
    </QNZCardComponent>
</div>




@code {
    CustomerPagedVM vm = new CustomerPagedVM();



    protected override void OnAfterRender(bool firstRender)
    {

        // base.OnAfterRender(firstRender);
    }

    protected override async System.Threading.Tasks.Task OnInitializedAsync()
    {
        await RefreshData(1);
        //   this.StateHasChanged();
    }


    protected async System.Threading.Tasks.Task PagerPageChanged(int page)
    {
        await RefreshData(page);
    }
    //搜索
    private async System.Threading.Tasks.Task SearchCustomers()
    {
        await RefreshData(1);
    }

    //绑定数据
    async System.Threading.Tasks.Task RefreshData(int page)
    {
        try
        {
            vm = await customerService.GetCustomersAsync(page, 10, vm.Keywords); //JsonConvert.DeserializeObject<CustomerPagedVM>(responseBody);
            this.StateHasChanged();
        }
        catch (AggregateException ex)
        {

            throw new HttpRequestException(ex.InnerException.Message, ex.InnerException);
        }

    }

}
