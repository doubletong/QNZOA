@page "/"

    <div class="page page-home">
        <div class="row mb-4">
            <div class="col">
                <div class="box">
                    <h3 class="title">567<small>篇</small></h3>
                    <p>新闻资讯</p><i class="iconfont icon-newspaper"></i>
                </div>
            </div>
            <div class="col">
                <div class="box b2">
                    <h3 class="title">567<small>个</small></h3>
                    <p>页面</p><i class="iconfont icon-file-text"></i>
                </div>
            </div>
            <div class="col">
                <div class="box b3">
                    <h3 class="title">5667<small>个</small></h3>
                    <p>产品展示</p><i class="iconfont icon-windows"></i>
                </div>
            </div>
            <div class="col">
                <div class="box b4">
                    <h3 class="title">567<small>个</small></h3>
                    <p>广告位</p><i class="iconfont icon-image"></i>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-6">1</div>
            <div class="col-md-6">2</div>
        </div>
    </div>

@*@inject IAuthorizationService AuthorizationService

    <button @onclick="@DoSomething">Do something important</button>

    @code {
        [CascadingParameter]
        private Task<AuthenticationState> authenticationStateTask { get; set; }

        private async Task DoSomething()
        {
            var user = (await authenticationStateTask).User;

            if (user.Identity.IsAuthenticated)
            {

                // Perform an action only available to authenticated (signed-in) users.
            }

            if (user.IsInRole("admin"))
            {
                // Perform an action only available to users in the 'admin' role.
            }

            if ((await AuthorizationService.AuthorizeAsync(user, "content-editor"))
                .Succeeded)
            {
                // Perform an action only available to users satisfying the
                // 'content-editor' policy.
            }
        }
    }*@